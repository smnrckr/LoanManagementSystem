{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sema_\\\\banking_app\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'\r\nconst CreateUser = () => {\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [tcknVkn, setTcknVkn] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userCode, setUserCode] = useState(null);\r\n\r\n    const handleSubmit = async (event) => {\r\n        //kayıt formları alındıktan sonra bunları spring/database göndermek için işlemler\r\n       \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\" >REGISTER</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                    placeholder=\"Firma Adı\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={tcknVkn}\r\n                    onChange={(e) => setTcknVkn(e.target.value)}\r\n                    placeholder=\"TCKN/VKN\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    placeholder=\"Adres\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Parola\"\r\n                />\r\n                <button type=\"submit\">Kaydet</button>\r\n            </form>\r\n            {userCode && (\r\n                <p>Kullanıcı Kodu: {userCode}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default CreateUser;\r\n*/\n\n/*\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst CreateUser = () => {\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [tcknVkn, setTcknVkn] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userCode, setUserCode] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            console.log('Submitting form with data:', {\r\n                companyName,\r\n                tcknVkn,\r\n                address,\r\n                email,\r\n                password\r\n            });\r\n\r\n            const response = await axios.post('/api/users/register', {\r\n                companyName,\r\n                tcknVkn,\r\n                address,\r\n                email,\r\n                password\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log('Response data:', response.data);\r\n                setUserCode(response.data.userCode); // Assuming response contains userCode\r\n            } else {\r\n                console.error('Unexpected response status:', response.status);\r\n                setError('Kullanıcı oluşturulamadı.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error occurred during registration:', error);\r\n            setError('Kullanıcı oluşturulurken bir hata meydana geldi.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\">REGISTER</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                    placeholder=\"Firma Adı\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={tcknVkn}\r\n                    onChange={(e) => setTcknVkn(e.target.value)}\r\n                    placeholder=\"TCKN/VKN\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    placeholder=\"Adres\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Parola\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Kaydet</button>\r\n            </form>\r\n            {userCode && (\r\n                <p>Kullanıcı Kodu: {userCode}</p>\r\n            )}\r\n            {error && (\r\n                <p className=\"error\">{error}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateUser;\r\n\r\n*/\n\n// Register.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    companyName: '',\n    tcknVkn: '',\n    address: '',\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/users/register', formData);\n      console.log('User registered:', response.data);\n    } catch (error) {\n      console.error('Error registering user:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"companyName\",\n      placeholder: \"Company Name\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"tcknVkn\",\n      placeholder: \"TCKN/VKN\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      placeholder: \"Address\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"h22z1JY9EVrITPgr+iISYViPIp4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","companyName","tcknVkn","address","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","console","log","data","error","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sema_/banking_app/src/Register.js"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'\r\nconst CreateUser = () => {\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [tcknVkn, setTcknVkn] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userCode, setUserCode] = useState(null);\r\n\r\n    const handleSubmit = async (event) => {\r\n        //kayıt formları alındıktan sonra bunları spring/database göndermek için işlemler\r\n       \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\" >REGISTER</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                    placeholder=\"Firma Adı\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={tcknVkn}\r\n                    onChange={(e) => setTcknVkn(e.target.value)}\r\n                    placeholder=\"TCKN/VKN\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    placeholder=\"Adres\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Parola\"\r\n                />\r\n                <button type=\"submit\">Kaydet</button>\r\n            </form>\r\n            {userCode && (\r\n                <p>Kullanıcı Kodu: {userCode}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default CreateUser;\r\n*/\r\n\r\n/*\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst CreateUser = () => {\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [tcknVkn, setTcknVkn] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userCode, setUserCode] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            console.log('Submitting form with data:', {\r\n                companyName,\r\n                tcknVkn,\r\n                address,\r\n                email,\r\n                password\r\n            });\r\n\r\n            const response = await axios.post('/api/users/register', {\r\n                companyName,\r\n                tcknVkn,\r\n                address,\r\n                email,\r\n                password\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log('Response data:', response.data);\r\n                setUserCode(response.data.userCode); // Assuming response contains userCode\r\n            } else {\r\n                console.error('Unexpected response status:', response.status);\r\n                setError('Kullanıcı oluşturulamadı.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error occurred during registration:', error);\r\n            setError('Kullanıcı oluşturulurken bir hata meydana geldi.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\">REGISTER</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                    placeholder=\"Firma Adı\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={tcknVkn}\r\n                    onChange={(e) => setTcknVkn(e.target.value)}\r\n                    placeholder=\"TCKN/VKN\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    placeholder=\"Adres\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Parola\"\r\n                    required\r\n                />\r\n                <button type=\"submit\">Kaydet</button>\r\n            </form>\r\n            {userCode && (\r\n                <p>Kullanıcı Kodu: {userCode}</p>\r\n            )}\r\n            {error && (\r\n                <p className=\"error\">{error}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateUser;\r\n\r\n*/\r\n\r\n// Register.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n    const [formData, setFormData] = useState({\r\n        companyName: '',\r\n        tcknVkn: '',\r\n        address: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/api/users/register', formData);\r\n            console.log('User registered:', response.data);\r\n        } catch (error) {\r\n            console.error('Error registering user:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" name=\"companyName\" placeholder=\"Company Name\" onChange={handleChange} required />\r\n            <input type=\"text\" name=\"tcknVkn\" placeholder=\"TCKN/VKN\" onChange={handleChange} required />\r\n            <input type=\"text\" name=\"address\" placeholder=\"Address\" onChange={handleChange} required />\r\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n            <button type=\"submit\">Register</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappingsvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACQ,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,qBAAqB,EAAEf,QAAQ,CAAC;MAClEgB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,oBACItB,OAAA;IAAMuB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBACzBxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACZ,IAAI,EAAC,aAAa;MAACa,WAAW,EAAC,cAAc;MAACC,QAAQ,EAAEjB,YAAa;MAACkB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpGhC,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACZ,IAAI,EAAC,SAAS;MAACa,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEjB,YAAa;MAACkB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5FhC,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACZ,IAAI,EAAC,SAAS;MAACa,WAAW,EAAC,SAAS;MAACC,QAAQ,EAAEjB,YAAa;MAACkB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3FhC,OAAA;MAAOyB,IAAI,EAAC,OAAO;MAACZ,IAAI,EAAC,OAAO;MAACa,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAEjB,YAAa;MAACkB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFhC,OAAA;MAAOyB,IAAI,EAAC,UAAU;MAACZ,IAAI,EAAC,UAAU;MAACa,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEjB,YAAa;MAACkB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjGhC,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf,CAAC;AAAC9B,EAAA,CAjCID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sema_\\\\banking_app\\\\src\\\\NewApplication.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n\n// const NewApplication = () => {\n//   const { userCode } = useParams();\n//   const navigate = useNavigate();\n//   const [loading, setLoading] = useState(false);\n//   const [campaigns,setCampaigns]=useState([]);\n//   const [selectedCampaign, setSelectedCampaign] = useState('');\n//   const [selectedTerm, setSelectedTerm] = useState('');\n//   const [rate, setRate] = useState('');\n//   const [terms, setTerms] = useState([]);\n\n//   const [formData, setFormData] = useState({\n//     tckn: \"\",\n//     phoneNumber: \"\",\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     address: \"\",\n//     monthlyIncome: \"\",\n//     loanAmount: \"\",\n//     campaignName: \"\",\n//     termLoan: \"\",\n//     interestRate: \"\",\n//   });\n\n//   useEffect(() => {\n//     setLoading(true); \n//     fetch('http://localhost:8080/api/campaign')\n//       .then((response) => {\n//         return response.json();\n//       })\n//       .then((data) => setCampaigns(data))\n//       .finally(() => {\n//         setLoading(false);\n//       });\n\n//   }, [userCode, navigate]);\n\n//   useEffect(() => {\n//     if (selectedCampaign) {\n//       const filteredTerms = campaigns\n//         .filter(campaign => campaign.campaignName === selectedCampaign)\n//         .map(campaign => ({\n//           termLoan: campaign.termLoan,\n//           interestRate: campaign.interestRate\n//         }));\n\n//       setTerms(filteredTerms);\n//       setSelectedTerm('');\n//       setRate('');\n//     }\n//   }, [selectedCampaign]);\n\n//   useEffect(() => {\n//     if (selectedTerm) {\n//       const termData = terms.find(term => term.termLoan === parseFloat(selectedTerm));\n//       if (termData) {\n//         setRate(termData.interestRate);\n//       }\n//     }\n//   }, [selectedTerm]);\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <div>\n//       <form>\n//         <input\n//           type=\"text\"\n//           placeholder=\"TCKN\"\n//           value={formData.tckn}\n//           onChange={(e) => setFormData({ ...formData, tckn: e.target.value })}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Telefon\"\n//           value={formData.phoneNumber}\n//           onChange={(e) => setFormData({ ...formData, phoneNumber: e.target.value })}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Ad\"\n//           value={formData.firstName}\n//           onChange={(e) =>\n//             setFormData({ ...formData, firstName: e.target.value })\n//           }\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Soyad\"\n//           value={formData.lastName}\n//           onChange={(e) =>\n//             setFormData({ ...formData, lastName: e.target.value })\n//           }\n//           required\n//         />\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Adres\"\n//           value={formData.address}\n//           onChange={(e) =>\n//             setFormData({ ...formData, address: e.target.value })\n//           }\n//           required\n//         />\n//         <input\n//           type=\"number\"\n//           placeholder=\"Aylık Gelir\"\n//           value={formData.monthlyIncome}\n//           onChange={(e) =>\n//             setFormData({ ...formData, monthlyIncome: e.target.value })\n//           }\n//           required\n//         />\n//         <input\n//           type=\"number\"\n//           placeholder=\"Kredi Tutarı\"\n//           value={formData.loanAmount}\n//           onChange={(e) =>\n//             setFormData({ ...formData, loanAmount: e.target.value })\n//           }\n//           required\n//         />\n\n//       </form>\n//     </div>\n//     <div>\n//     <select\n//         value={selectedCampaign}\n//         onChange={(e) => setSelectedCampaign(e.target.value)} >\n//         <option value=\"\">Bir Kampanya Seçin</option>\n//         {campaigns.map((campaign) => (\n//           <option key={campaign.id} value={campaign.id}>\n//             {campaign.campaignCode} { }\n//           </option>\n//         ))}\n//       </select>\n//       {selectedCampaign && (\n//       <>\n//         <select\n//           value={selectedTerm}\n//           onChange={(e) => setSelectedTerm(e.target.value)}\n//           disabled={!selectedCampaign}\n//         >\n//           <option value=\"\">Select a term</option>\n//           {terms.map((term, index) => (\n//             <option key={index} value={term.termLoan}>\n//               {term.termLoan}\n//             </option>\n//           ))}\n//         </select>\n\n//         <input\n//           type=\"text\"\n//           value={rate}\n//           readOnly\n//           placeholder=\"Loan Rate\"\n//         />\n//       </>\n//     )}\n//       </div>\n//     </div>\n\n//   );\n// };\n// export default NewApplication;\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewApplication = () => {\n  _s();\n  const {\n    userCode\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [campaigns, setCampaigns] = useState([]);\n  const [selectedCampaign, setSelectedCampaign] = useState('');\n  const [selectedTerm, setSelectedTerm] = useState('');\n  const [rate, setRate] = useState('');\n  const [terms, setTerms] = useState([]);\n  const [formData, setFormData] = useState({\n    tckn: \"\",\n    phoneNumber: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    address: \"\",\n    monthlyIncome: \"\",\n    loanAmount: \"\",\n    campaignName: \"\",\n    termLoan: \"\",\n    interestRate: \"\"\n  });\n  useEffect(() => {\n    setLoading(true);\n    fetch('http://localhost:8080/api/campaign').then(response => response.json()).then(data => {\n      setCampaigns(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching campaign data:\", error);\n      setLoading(false);\n    });\n  }, [userCode, navigate]);\n  useEffect(() => {\n    if (selectedCampaign) {\n      const selectedCampaignData = campaigns.find(campaign => campaign.id === parseInt(selectedCampaign));\n      if (selectedCampaignData) {\n        // Assuming `campaignData` has `terms` field that is an array of terms\n        const filteredTerms = [{\n          termLoan: selectedCampaignData.termLoan,\n          interestRate: selectedCampaignData.interestRate\n        }];\n        setTerms(filteredTerms);\n        setSelectedTerm('');\n        setRate('');\n      }\n    }\n  }, [selectedCampaign, campaigns]);\n  useEffect(() => {\n    if (selectedTerm) {\n      const termData = terms.find(term => term.termLoan === parseFloat(selectedTerm));\n      if (termData) {\n        setRate(termData.interestRate);\n      }\n    }\n  }, [selectedTerm, terms]);\n  useEffect(() => {\n    // Update formData when campaign or term is selected\n    const selectedCampaignData = campaigns.find(campaign => campaign.id === parseInt(selectedCampaign));\n    if (selectedCampaignData) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        campaignName: selectedCampaignData.campaignCode,\n        termLoan: selectedTerm,\n        interestRate: rate\n      }));\n    }\n  }, [selectedCampaign, selectedTerm, rate, campaigns]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"TCKN\",\n        value: formData.tckn,\n        onChange: e => setFormData({\n          ...formData,\n          tckn: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Telefon\",\n        value: formData.phoneNumber,\n        onChange: e => setFormData({\n          ...formData,\n          phoneNumber: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ad\",\n        value: formData.firstName,\n        onChange: e => setFormData({\n          ...formData,\n          firstName: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Soyad\",\n        value: formData.lastName,\n        onChange: e => setFormData({\n          ...formData,\n          lastName: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Adres\",\n        value: formData.address,\n        onChange: e => setFormData({\n          ...formData,\n          address: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Ayl\\u0131k Gelir\",\n        value: formData.monthlyIncome,\n        onChange: e => setFormData({\n          ...formData,\n          monthlyIncome: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Kredi Tutar\\u0131\",\n        value: formData.loanAmount,\n        onChange: e => setFormData({\n          ...formData,\n          loanAmount: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCampaign,\n        onChange: e => setSelectedCampaign(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Bir Kampanya Se\\xE7in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), campaigns.map(campaign => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: campaign.id,\n          children: campaign.campaignCode\n        }, campaign.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), selectedCampaign && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTerm,\n          onChange: e => setSelectedTerm(e.target.value),\n          disabled: !selectedCampaign,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), terms.map((term, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: term.termLoan,\n            children: term.termLoan\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: rate,\n          readOnly: true,\n          placeholder: \"Loan Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(NewApplication, \"/R8WxgVhTpMYO3GWP0SSqprJZ/o=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NewApplication;\nexport default NewApplication;\nvar _c;\n$RefreshReg$(_c, \"NewApplication\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","NewApplication","_s","userCode","navigate","loading","setLoading","campaigns","setCampaigns","selectedCampaign","setSelectedCampaign","selectedTerm","setSelectedTerm","rate","setRate","terms","setTerms","formData","setFormData","tckn","phoneNumber","firstName","lastName","email","address","monthlyIncome","loanAmount","campaignName","termLoan","interestRate","fetch","then","response","json","data","catch","error","console","selectedCampaignData","find","campaign","id","parseInt","filteredTerms","termData","term","parseFloat","prevFormData","campaignCode","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","map","disabled","index","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/sema_/banking_app/src/NewApplication.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n// const NewApplication = () => {\r\n//   const { userCode } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [campaigns,setCampaigns]=useState([]);\r\n//   const [selectedCampaign, setSelectedCampaign] = useState('');\r\n//   const [selectedTerm, setSelectedTerm] = useState('');\r\n//   const [rate, setRate] = useState('');\r\n//   const [terms, setTerms] = useState([]);\r\n\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     tckn: \"\",\r\n//     phoneNumber: \"\",\r\n//     firstName: \"\",\r\n//     lastName: \"\",\r\n//     email: \"\",\r\n//     address: \"\",\r\n//     monthlyIncome: \"\",\r\n//     loanAmount: \"\",\r\n//     campaignName: \"\",\r\n//     termLoan: \"\",\r\n//     interestRate: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     setLoading(true); \r\n//     fetch('http://localhost:8080/api/campaign')\r\n//       .then((response) => {\r\n//         return response.json();\r\n//       })\r\n//       .then((data) => setCampaigns(data))\r\n//       .finally(() => {\r\n//         setLoading(false);\r\n//       });\r\n\r\n//   }, [userCode, navigate]);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedCampaign) {\r\n//       const filteredTerms = campaigns\r\n//         .filter(campaign => campaign.campaignName === selectedCampaign)\r\n//         .map(campaign => ({\r\n//           termLoan: campaign.termLoan,\r\n//           interestRate: campaign.interestRate\r\n//         }));\r\n  \r\n//       setTerms(filteredTerms);\r\n//       setSelectedTerm('');\r\n//       setRate('');\r\n//     }\r\n//   }, [selectedCampaign]);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedTerm) {\r\n//       const termData = terms.find(term => term.termLoan === parseFloat(selectedTerm));\r\n//       if (termData) {\r\n//         setRate(termData.interestRate);\r\n//       }\r\n//     }\r\n//   }, [selectedTerm]);\r\n  \r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//       <form>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"TCKN\"\r\n//           value={formData.tckn}\r\n//           onChange={(e) => setFormData({ ...formData, tckn: e.target.value })}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Telefon\"\r\n//           value={formData.phoneNumber}\r\n//           onChange={(e) => setFormData({ ...formData, phoneNumber: e.target.value })}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Ad\"\r\n//           value={formData.firstName}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, firstName: e.target.value })\r\n//           }\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Soyad\"\r\n//           value={formData.lastName}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, lastName: e.target.value })\r\n//           }\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={formData.email}\r\n//           onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Adres\"\r\n//           value={formData.address}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, address: e.target.value })\r\n//           }\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Aylık Gelir\"\r\n//           value={formData.monthlyIncome}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, monthlyIncome: e.target.value })\r\n//           }\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"number\"\r\n//           placeholder=\"Kredi Tutarı\"\r\n//           value={formData.loanAmount}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, loanAmount: e.target.value })\r\n//           }\r\n//           required\r\n//         />\r\n        \r\n//       </form>\r\n//     </div>\r\n//     <div>\r\n//     <select\r\n//         value={selectedCampaign}\r\n//         onChange={(e) => setSelectedCampaign(e.target.value)} >\r\n//         <option value=\"\">Bir Kampanya Seçin</option>\r\n//         {campaigns.map((campaign) => (\r\n//           <option key={campaign.id} value={campaign.id}>\r\n//             {campaign.campaignCode} { }\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n//       {selectedCampaign && (\r\n//       <>\r\n//         <select\r\n//           value={selectedTerm}\r\n//           onChange={(e) => setSelectedTerm(e.target.value)}\r\n//           disabled={!selectedCampaign}\r\n//         >\r\n//           <option value=\"\">Select a term</option>\r\n//           {terms.map((term, index) => (\r\n//             <option key={index} value={term.termLoan}>\r\n//               {term.termLoan}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n\r\n//         <input\r\n//           type=\"text\"\r\n//           value={rate}\r\n//           readOnly\r\n//           placeholder=\"Loan Rate\"\r\n//         />\r\n//       </>\r\n//     )}\r\n//       </div>\r\n//     </div>\r\n    \r\n\r\n//   );\r\n// };\r\n// export default NewApplication;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst NewApplication = () => {\r\n  const { userCode } = useParams();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [selectedCampaign, setSelectedCampaign] = useState('');\r\n  const [selectedTerm, setSelectedTerm] = useState('');\r\n  const [rate, setRate] = useState('');\r\n  const [terms, setTerms] = useState([]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    tckn: \"\",\r\n    phoneNumber: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    monthlyIncome: \"\",\r\n    loanAmount: \"\",\r\n    campaignName: \"\",\r\n    termLoan: \"\",\r\n    interestRate: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLoading(true); \r\n    fetch('http://localhost:8080/api/campaign')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCampaigns(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching campaign data:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, [userCode, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCampaign) {\r\n      const selectedCampaignData = campaigns.find(campaign => campaign.id === parseInt(selectedCampaign));\r\n      if (selectedCampaignData) {\r\n        // Assuming `campaignData` has `terms` field that is an array of terms\r\n        const filteredTerms = [\r\n          { termLoan: selectedCampaignData.termLoan, interestRate: selectedCampaignData.interestRate }\r\n        ];\r\n        setTerms(filteredTerms);\r\n        setSelectedTerm('');\r\n        setRate('');\r\n      }\r\n    }\r\n  }, [selectedCampaign, campaigns]);\r\n\r\n  useEffect(() => {\r\n    if (selectedTerm) {\r\n      const termData = terms.find(term => term.termLoan === parseFloat(selectedTerm));\r\n      if (termData) {\r\n        setRate(termData.interestRate);\r\n      }\r\n    }\r\n  }, [selectedTerm, terms]);\r\n\r\n  useEffect(() => {\r\n    // Update formData when campaign or term is selected\r\n    const selectedCampaignData = campaigns.find(campaign => campaign.id === parseInt(selectedCampaign));\r\n    if (selectedCampaignData) {\r\n      setFormData(prevFormData => ({\r\n        ...prevFormData,\r\n        campaignName: selectedCampaignData.campaignCode,\r\n        termLoan: selectedTerm,\r\n        interestRate: rate,\r\n      }));\r\n    }\r\n  }, [selectedCampaign, selectedTerm, rate, campaigns]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"TCKN\"\r\n          value={formData.tckn}\r\n          onChange={(e) => setFormData({ ...formData, tckn: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Telefon\"\r\n          value={formData.phoneNumber}\r\n          onChange={(e) => setFormData({ ...formData, phoneNumber: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ad\"\r\n          value={formData.firstName}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, firstName: e.target.value })\r\n          }\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Soyad\"\r\n          value={formData.lastName}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, lastName: e.target.value })\r\n          }\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Adres\"\r\n          value={formData.address}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, address: e.target.value })\r\n          }\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Aylık Gelir\"\r\n          value={formData.monthlyIncome}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, monthlyIncome: e.target.value })\r\n          }\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Kredi Tutarı\"\r\n          value={formData.loanAmount}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, loanAmount: e.target.value })\r\n          }\r\n          required\r\n        />\r\n      </form>\r\n\r\n      <div>\r\n        <select\r\n          value={selectedCampaign}\r\n          onChange={(e) => setSelectedCampaign(e.target.value)}\r\n        >\r\n          <option value=\"\">Bir Kampanya Seçin</option>\r\n          {campaigns.map((campaign) => (\r\n            <option key={campaign.id} value={campaign.id}>\r\n              {campaign.campaignCode}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {selectedCampaign && (\r\n          <>\r\n            <select\r\n              value={selectedTerm}\r\n              onChange={(e) => setSelectedTerm(e.target.value)}\r\n              disabled={!selectedCampaign}\r\n            >\r\n              <option value=\"\">Select a term</option>\r\n              {terms.map((term, index) => (\r\n                <option key={index} value={term.termLoan}>\r\n                  {term.termLoan}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <input\r\n              type=\"text\"\r\n              value={rate}\r\n              readOnly\r\n              placeholder=\"Loan Rate\"\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewApplication;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAS,CAAC,GAAGP,SAAS,CAAC,CAAC;EAChC,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,SAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
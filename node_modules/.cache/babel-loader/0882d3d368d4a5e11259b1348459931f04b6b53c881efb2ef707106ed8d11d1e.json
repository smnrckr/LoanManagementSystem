{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sema_\\\\banking_app\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import useApi from './useApi/useApi';\n// import { register } from './apiUrl/apiUrl';\n\n// const CreateUser = () => {\n//     const { response, post, loading } = useApi();\n//     const [companyName, setCompanyName] = useState('');\n//     const [tcknVkn, setTcknVkn] = useState('');\n//     const [address, setAddress] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [userCode, setUserCode] = useState(null);\n//     const [error, setError] = useState('');\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         try {\n//             console.log('Submitting form with data:', {\n//                 companyName,\n//                 tcknVkn,\n//                 address,\n//                 email,\n//                 password\n//             });\n\n//             const response = await post(register, {\n//                 companyName,\n//                 tcknVkn,\n//                 address,\n//                 email,\n//                 password\n//             });\n\n//             if (response.status === 200) {\n//                 console.log('Response data:', response.data);\n//                 setUserCode(response.data.userCode); \n//             } else {\n//                 console.error('Unexpected response status:', response.status);\n//                 setError('Kullanıcı oluşturulamadı.');\n//             }\n//         } catch (error) {\n//             console.error('Error occurred during registration:', error);\n//             setError('Kullanıcı oluşturulurken bir hata meydana geldi.');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1 align=\"center\">REGISTER</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\"text\"\n//                     value={companyName}\n//                     onChange={(e) => setCompanyName(e.target.value)}\n//                     placeholder=\"Firma Adı\"\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     value={tcknVkn}\n//                     onChange={(e) => setTcknVkn(e.target.value)}\n//                     placeholder=\"TCKN/VKN\"\n//                     required\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     value={address}\n//                     onChange={(e) => setAddress(e.target.value)}\n//                     placeholder=\"Adres\"\n//                     required\n//                 />\n//                 <input\n//                     type=\"email\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     placeholder=\"Email\"\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                     placeholder=\"Parola\"\n//                     required\n//                 />\n//                 <button type=\"submit\">Kaydet</button>\n//             </form>\n//             {userCode && (\n//                 <p>Kullanıcı Kodu: {userCode}</p>\n//             )}\n//             {error && (\n//                 <p className=\"error\">{error}</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default CreateUser;\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport useApi from './useApi/useApi';\nimport { register } from './apiUrl/apiUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateUser = () => {\n  _s();\n  const {\n    post,\n    response,\n    loading\n  } = useApi();\n  const [companyName, setCompanyName] = useState('');\n  const [tcknVkn, setTcknVkn] = useState('');\n  const [address, setAddress] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userCode, setUserCode] = useState(null);\n  const [error, setError] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      console.log('Submitting form with data:', {\n        companyName,\n        tcknVkn,\n        address,\n        email,\n        password\n      });\n      await post(register, {\n        companyName,\n        tcknVkn,\n        address,\n        email,\n        password\n      });\n      if (response.ok) {\n        console.log('Response data:', response.data);\n        setUserCode(response.data.userCode);\n      } else {\n        console.error('Unexpected response status:', response.status);\n        setError('Kullanıcı oluşturulamadı.');\n      }\n    } catch (error) {\n      console.error('Error occurred during registration:', error);\n      setError('Kullanıcı oluşturulurken bir hata meydana geldi.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      align: \"center\",\n      children: \"REGISTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value),\n        placeholder: \"Firma Ad\\u0131\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: tcknVkn,\n        onChange: e => setTcknVkn(e.target.value),\n        placeholder: \"TCKN/VKN\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        placeholder: \"Adres\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Parola\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), userCode && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Kullan\\u0131c\\u0131 Kodu: \", userCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateUser, \"eIdgDAs+Rqz2PNDKHubmMhlYhwU=\", false, function () {\n  return [useApi];\n});\n_c = CreateUser;\nexport default CreateUser;\nvar _c;\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"names":["React","useState","useApi","register","jsxDEV","_jsxDEV","CreateUser","_s","post","response","loading","companyName","setCompanyName","tcknVkn","setTcknVkn","address","setAddress","email","setEmail","password","setPassword","userCode","setUserCode","error","setError","handleSubmit","event","preventDefault","console","log","ok","data","status","children","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","required","disabled","className","_c","$RefreshReg$"],"sources":["C:/Users/sema_/banking_app/src/Register.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './App.css';\r\n// import useApi from './useApi/useApi';\r\n// import { register } from './apiUrl/apiUrl';\r\n\r\n// const CreateUser = () => {\r\n//     const { response, post, loading } = useApi();\r\n//     const [companyName, setCompanyName] = useState('');\r\n//     const [tcknVkn, setTcknVkn] = useState('');\r\n//     const [address, setAddress] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [userCode, setUserCode] = useState(null);\r\n//     const [error, setError] = useState('');\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         try {\r\n//             console.log('Submitting form with data:', {\r\n//                 companyName,\r\n//                 tcknVkn,\r\n//                 address,\r\n//                 email,\r\n//                 password\r\n//             });\r\n\r\n//             const response = await post(register, {\r\n//                 companyName,\r\n//                 tcknVkn,\r\n//                 address,\r\n//                 email,\r\n//                 password\r\n//             });\r\n\r\n//             if (response.status === 200) {\r\n//                 console.log('Response data:', response.data);\r\n//                 setUserCode(response.data.userCode); \r\n//             } else {\r\n//                 console.error('Unexpected response status:', response.status);\r\n//                 setError('Kullanıcı oluşturulamadı.');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error occurred during registration:', error);\r\n//             setError('Kullanıcı oluşturulurken bir hata meydana geldi.');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1 align=\"center\">REGISTER</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={companyName}\r\n//                     onChange={(e) => setCompanyName(e.target.value)}\r\n//                     placeholder=\"Firma Adı\"\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={tcknVkn}\r\n//                     onChange={(e) => setTcknVkn(e.target.value)}\r\n//                     placeholder=\"TCKN/VKN\"\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={address}\r\n//                     onChange={(e) => setAddress(e.target.value)}\r\n//                     placeholder=\"Adres\"\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                     placeholder=\"Email\"\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                     placeholder=\"Parola\"\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">Kaydet</button>\r\n//             </form>\r\n//             {userCode && (\r\n//                 <p>Kullanıcı Kodu: {userCode}</p>\r\n//             )}\r\n//             {error && (\r\n//                 <p className=\"error\">{error}</p>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default CreateUser;\r\n\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport useApi from './useApi/useApi';\r\nimport { register } from './apiUrl/apiUrl';\r\n\r\nconst CreateUser = () => {\r\n    const { post, response, loading } = useApi();\r\n\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [tcknVkn, setTcknVkn] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userCode, setUserCode] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            console.log('Submitting form with data:', {\r\n                companyName,\r\n                tcknVkn,\r\n                address,\r\n                email,\r\n                password\r\n            });\r\n\r\n            await post(register, {\r\n                companyName,\r\n                tcknVkn,\r\n                address,\r\n                email,\r\n                password\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Response data:', response.data);\r\n                setUserCode(response.data.userCode); \r\n            } else {\r\n                console.error('Unexpected response status:', response.status);\r\n                setError('Kullanıcı oluşturulamadı.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error occurred during registration:', error);\r\n            setError('Kullanıcı oluşturulurken bir hata meydana geldi.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\">REGISTER</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                    placeholder=\"Firma Adı\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={tcknVkn}\r\n                    onChange={(e) => setTcknVkn(e.target.value)}\r\n                    placeholder=\"TCKN/VKN\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    placeholder=\"Adres\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Parola\"\r\n                    required\r\n                />\r\n                <button type=\"submit\" disabled={loading}>Kaydet</button>\r\n            </form>\r\n            {userCode && (\r\n                <p>Kullanıcı Kodu: {userCode}</p>\r\n            )}\r\n            {error && (\r\n                <p className=\"error\">{error}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
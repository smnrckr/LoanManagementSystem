{"ast":null,"code":"import useSSR from 'use-ssr';\nimport { invariant } from './utils';\nimport { CachePolicies } from './types';\nimport getLocalStorage from './storage/localStorage';\nimport getMemoryStorage from './storage/memoryStorage';\nvar NETWORK_ONLY = CachePolicies.NETWORK_ONLY,\n  NO_CACHE = CachePolicies.NO_CACHE;\nvar useCache = function (_a) {\n  var persist = _a.persist,\n    cacheLife = _a.cacheLife,\n    cachePolicy = _a.cachePolicy;\n  var _b = useSSR(),\n    isNative = _b.isNative,\n    isServer = _b.isServer;\n  invariant(!(isServer && persist), 'There is no persistent storage on the Server currently! üôÖ‚Äç‚ôÇÔ∏è');\n  invariant(!(isNative && persist), 'React Native support for persistent cache is not yet implemented. üôÖ‚Äç‚ôÇÔ∏è');\n  invariant(!(persist && [NO_CACHE, NETWORK_ONLY].includes(cachePolicy)), \"You cannot use option 'persist' with cachePolicy: \" + cachePolicy + \" \\uD83D\\uDE45\\u200D\\u2642\\uFE0F\");\n  // right now we're not worrying about react-native\n  if (persist) return getLocalStorage({\n    cacheLife: cacheLife || 24 * 3600000\n  });\n  return getMemoryStorage({\n    cacheLife: cacheLife\n  });\n};\nexport default useCache;","map":{"version":3,"names":["useSSR","invariant","CachePolicies","getLocalStorage","getMemoryStorage","NETWORK_ONLY","NO_CACHE","useCache","_a","persist","cacheLife","cachePolicy","_b","isNative","isServer","includes"],"sources":["C:/Users/sema_/banking_app/node_modules/use-http/dist/esm/useCache.js"],"sourcesContent":["import useSSR from 'use-ssr';\nimport { invariant } from './utils';\nimport { CachePolicies } from './types';\nimport getLocalStorage from './storage/localStorage';\nimport getMemoryStorage from './storage/memoryStorage';\nvar NETWORK_ONLY = CachePolicies.NETWORK_ONLY, NO_CACHE = CachePolicies.NO_CACHE;\nvar useCache = function (_a) {\n    var persist = _a.persist, cacheLife = _a.cacheLife, cachePolicy = _a.cachePolicy;\n    var _b = useSSR(), isNative = _b.isNative, isServer = _b.isServer;\n    invariant(!(isServer && persist), 'There is no persistent storage on the Server currently! üôÖ‚Äç‚ôÇÔ∏è');\n    invariant(!(isNative && persist), 'React Native support for persistent cache is not yet implemented. üôÖ‚Äç‚ôÇÔ∏è');\n    invariant(!(persist && [NO_CACHE, NETWORK_ONLY].includes(cachePolicy)), \"You cannot use option 'persist' with cachePolicy: \" + cachePolicy + \" \\uD83D\\uDE45\\u200D\\u2642\\uFE0F\");\n    // right now we're not worrying about react-native\n    if (persist)\n        return getLocalStorage({ cacheLife: cacheLife || (24 * 3600000) });\n    return getMemoryStorage({ cacheLife: cacheLife });\n};\nexport default useCache;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAC5B,SAASC,SAAS,QAAQ,SAAS;AACnC,SAASC,aAAa,QAAQ,SAAS;AACvC,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,IAAIC,YAAY,GAAGH,aAAa,CAACG,YAAY;EAAEC,QAAQ,GAAGJ,aAAa,CAACI,QAAQ;AAChF,IAAIC,QAAQ,GAAG,SAAAA,CAAUC,EAAE,EAAE;EACzB,IAAIC,OAAO,GAAGD,EAAE,CAACC,OAAO;IAAEC,SAAS,GAAGF,EAAE,CAACE,SAAS;IAAEC,WAAW,GAAGH,EAAE,CAACG,WAAW;EAChF,IAAIC,EAAE,GAAGZ,MAAM,CAAC,CAAC;IAAEa,QAAQ,GAAGD,EAAE,CAACC,QAAQ;IAAEC,QAAQ,GAAGF,EAAE,CAACE,QAAQ;EACjEb,SAAS,CAAC,EAAEa,QAAQ,IAAIL,OAAO,CAAC,EAAE,+DAA+D,CAAC;EAClGR,SAAS,CAAC,EAAEY,QAAQ,IAAIJ,OAAO,CAAC,EAAE,yEAAyE,CAAC;EAC5GR,SAAS,CAAC,EAAEQ,OAAO,IAAI,CAACH,QAAQ,EAAED,YAAY,CAAC,CAACU,QAAQ,CAACJ,WAAW,CAAC,CAAC,EAAE,oDAAoD,GAAGA,WAAW,GAAG,iCAAiC,CAAC;EAC/K;EACA,IAAIF,OAAO,EACP,OAAON,eAAe,CAAC;IAAEO,SAAS,EAAEA,SAAS,IAAK,EAAE,GAAG;EAAS,CAAC,CAAC;EACtE,OAAON,gBAAgB,CAAC;IAAEM,SAAS,EAAEA;EAAU,CAAC,CAAC;AACrD,CAAC;AACD,eAAeH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
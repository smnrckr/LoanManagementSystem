{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sema_\\\\banking_app\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; \n// import './App.css';\n// import useApi from './useApi/useApi';\n// import { login } from './apiUrl/apiUrl';\n\n// const Login = () => {\n//     const { post, response } = useApi();\n//     const [tcknVkn, setTckn] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [loginError, setLoginError] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         try {\n//             await post(login, {\n//                 tcknVkn,\n//                 password\n//             });\n//             if (response.ok) {\n//                 navigate(`/api/loans`); \n//             }else{\n//                 console.error('Unexpected response status:', response.status);\n//                 setLoginError('Kullanıcı adı veya parola yanlış.');\n//             }\n//         } catch (error) {\n//             console.error('Giriş sırasında hata meydana geldi!', error);\n//             setLoginError('Giriş sırasında bir hata oluştu. Lütfen tekrar deneyin.');\n//         }\n//     };\n//     const handleRegisterRedirect = () => {\n//         navigate('/register'); \n//     };\n\n//     return (\n//         <div>\n//             <h1 align=\"center\">LOGIN</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <input\n//                     type=\"text\"\n//                     value={tcknVkn}\n//                     onChange={(e) => setTckn(e.target.value)}\n//                     placeholder=\"TCKN\"\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                     placeholder=\"Parola\"\n//                     required\n//                 />\n//                 <button type=\"submit\">Giriş Yap</button>\n//             </form>\n//             {loginError && (\n//                 <p className=\"error\">{loginError}</p>\n//             )}\n//             <br></br>\n//             <button onClick={handleRegisterRedirect}>Kullanıcı Oluştur</button>\n//         </div>\n//     );\n// };\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useApi from './useApi/useApi';\nimport { loginUrl, fetchLoansUrl } from './apiUrl/apiUrl'; // URL'leri doğru bir şekilde tanımlayın\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    post: postLogin,\n    data: loginData,\n    error: loginError,\n    loading: loginLoading\n  } = useApi('/login', {}, []);\n  const {\n    get: fetchLoans\n  } = useApi('/loans', {}, []); // Loans API'ı için ayrı bir kanca oluşturabilirsiniz\n  const [tcknVkn, setTckn] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginErrorMessage, setLoginErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await postLogin({\n        tcknVkn,\n        password\n      }); // Giriş API'sini çağır\n\n      if (loginError) {\n        setLoginErrorMessage('Kullanıcı adı veya parola yanlış.');\n      } else if (loginData) {\n        // Giriş başarılı olduğunda userCode'u al ve yeni API çağrısı yap\n        const userCode = loginData.userCode; // Geri dönen yanıtın userCode içerdiğini varsayıyoruz\n        navigate(`/loans/${userCode}`); // Yönlendirme işlemi userCode ile yapılıyor\n      }\n    } catch (error) {\n      console.error('Giriş sırasında hata meydana geldi!', error);\n      setLoginErrorMessage('Giriş sırasında bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n  const handleRegisterRedirect = () => {\n    navigate('/register');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      align: \"center\",\n      children: \"Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: tcknVkn,\n        onChange: e => setTckn(e.target.value),\n        placeholder: \"TCKN\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Parola\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loginLoading,\n        children: \"Giri\\u015F Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), loginErrorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: loginErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegisterRedirect,\n      children: \"Kullan\\u0131c\\u0131 Olu\\u015Ftur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"sMtiV/9oUYyB76FLggygv0nETaU=\", false, function () {\n  return [useApi, useApi, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useApi","loginUrl","fetchLoansUrl","jsxDEV","_jsxDEV","Login","_s","post","postLogin","data","loginData","error","loginError","loading","loginLoading","get","fetchLoans","tcknVkn","setTckn","password","setPassword","loginErrorMessage","setLoginErrorMessage","navigate","handleSubmit","event","preventDefault","userCode","console","handleRegisterRedirect","children","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","required","disabled","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sema_/banking_app/src/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom'; \r\n// import './App.css';\r\n// import useApi from './useApi/useApi';\r\n// import { login } from './apiUrl/apiUrl';\r\n\r\n// const Login = () => {\r\n//     const { post, response } = useApi();\r\n//     const [tcknVkn, setTckn] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [loginError, setLoginError] = useState('');\r\n//     const navigate = useNavigate();\r\n    \r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         try {\r\n//             await post(login, {\r\n//                 tcknVkn,\r\n//                 password\r\n//             });\r\n//             if (response.ok) {\r\n//                 navigate(`/api/loans`); \r\n//             }else{\r\n//                 console.error('Unexpected response status:', response.status);\r\n//                 setLoginError('Kullanıcı adı veya parola yanlış.');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Giriş sırasında hata meydana geldi!', error);\r\n//             setLoginError('Giriş sırasında bir hata oluştu. Lütfen tekrar deneyin.');\r\n//         }\r\n//     };\r\n//     const handleRegisterRedirect = () => {\r\n//         navigate('/register'); \r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1 align=\"center\">LOGIN</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={tcknVkn}\r\n//                     onChange={(e) => setTckn(e.target.value)}\r\n//                     placeholder=\"TCKN\"\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                     placeholder=\"Parola\"\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">Giriş Yap</button>\r\n//             </form>\r\n//             {loginError && (\r\n//                 <p className=\"error\">{loginError}</p>\r\n//             )}\r\n//             <br></br>\r\n//             <button onClick={handleRegisterRedirect}>Kullanıcı Oluştur</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; \r\nimport useApi from './useApi/useApi';\r\nimport { loginUrl, fetchLoansUrl } from './apiUrl/apiUrl'; // URL'leri doğru bir şekilde tanımlayın\r\n\r\nconst Login = () => {\r\n    const { post: postLogin, data: loginData, error: loginError, loading: loginLoading } = useApi('/login', {}, []);\r\n    const { get: fetchLoans } = useApi('/loans', {}, []); // Loans API'ı için ayrı bir kanca oluşturabilirsiniz\r\n    const [tcknVkn, setTckn] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginErrorMessage, setLoginErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await postLogin({ tcknVkn, password }); // Giriş API'sini çağır\r\n\r\n            if (loginError) {\r\n                setLoginErrorMessage('Kullanıcı adı veya parola yanlış.');\r\n            } else if (loginData) {\r\n                // Giriş başarılı olduğunda userCode'u al ve yeni API çağrısı yap\r\n                const userCode = loginData.userCode; // Geri dönen yanıtın userCode içerdiğini varsayıyoruz\r\n                navigate(`/loans/${userCode}`); // Yönlendirme işlemi userCode ile yapılıyor\r\n            }\r\n        } catch (error) {\r\n            console.error('Giriş sırasında hata meydana geldi!', error);\r\n            setLoginErrorMessage('Giriş sırasında bir hata oluştu. Lütfen tekrar deneyin.');\r\n        }\r\n    };\r\n\r\n    const handleRegisterRedirect = () => {\r\n        navigate('/register'); \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 align=\"center\">Giriş Yap</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={tcknVkn}\r\n                    onChange={(e) => setTckn(e.target.value)}\r\n                    placeholder=\"TCKN\"\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Parola\"\r\n                    required\r\n                />\r\n                <button type=\"submit\" disabled={loginLoading}>Giriş Yap</button> {/* Yükleniyorsa butonu devre dışı bırak */}\r\n            </form>\r\n            {loginErrorMessage && (\r\n                <p className=\"error\">{loginErrorMessage}</p>\r\n            )}\r\n            <br></br>\r\n            <button onClick={handleRegisterRedirect}>Kullanıcı Oluştur</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}